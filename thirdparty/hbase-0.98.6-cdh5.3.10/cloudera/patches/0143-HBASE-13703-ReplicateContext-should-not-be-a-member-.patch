From eb47963f7124d6408f25d13e9532118ac6e737a5 Mon Sep 17 00:00:00 2001
From: Lars Hofhansl <larsh@apache.org>
Date: Thu, 21 May 2015 22:10:09 -0700
Subject: [PATCH 143/157] HBASE-13703 ReplicateContext should not be a member
 of ReplicationSource.

Reason: Bug
Author: Lars Hofhansl
Ref: CDH-35763
---
 .../hbase/replication/ReplicationEndpoint.java     |    2 +-
 .../regionserver/ReplicationSource.java            |    6 ++----
 2 files changed, 3 insertions(+), 5 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ReplicationEndpoint.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ReplicationEndpoint.java
index 90e3460..310f26b 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ReplicationEndpoint.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/ReplicationEndpoint.java
@@ -127,7 +127,7 @@ public interface ReplicationEndpoint extends Service {
    * A context for {@link ReplicationEndpoint#replicate(ReplicateContext)} method.
    */
   @InterfaceAudience.LimitedPrivate(HBaseInterfaceAudience.REPLICATION)
-  class ReplicateContext {
+  static class ReplicateContext {
     List<HLog.Entry> entries;
     int size;
     @InterfaceAudience.Private
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java
index 8b15ede..1cae647 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/replication/regionserver/ReplicationSource.java
@@ -126,8 +126,6 @@ public class ReplicationSource extends Thread
   private ReplicationEndpoint replicationEndpoint;
   // A filter (or a chain of filters) for the WAL entries.
   private WALEntryFilter walEntryFilter;
-  // Context for ReplicationEndpoint#replicate()
-  private ReplicationEndpoint.ReplicateContext replicateContext;
   // throttler
   private ReplicationThrottler throttler;
 
@@ -181,8 +179,6 @@ public class ReplicationSource extends Thread
     this.peerId = this.replicationQueueInfo.getPeerId();
     this.logQueueWarnThreshold = this.conf.getInt("replication.source.log.queue.warn", 2);
     this.replicationEndpoint = replicationEndpoint;
-
-    this.replicateContext = new ReplicationEndpoint.ReplicateContext();
   }
 
   private void decorateConf() {
@@ -679,6 +675,8 @@ public class ReplicationSource extends Thread
             this.throttler.resetStartTick();
           }
         }
+        // create replicateContext here, so the entries can be GC'd upon return from this call stack
+        ReplicationEndpoint.ReplicateContext replicateContext = new ReplicationEndpoint.ReplicateContext();
         replicateContext.setEntries(entries).setSize(currentSize);
 
         // send the edits to the endpoint. Will block until the edits are shipped and acknowledged
-- 
1.7.9.5

