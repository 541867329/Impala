From 51644fa04380353b444dcc9374105e9c9d2ead89 Mon Sep 17 00:00:00 2001
From: Lars Hofhansl <larsh@apache.org>
Date: Tue, 16 Jun 2015 12:21:49 -0700
Subject: [PATCH 121/157] HBASE-13885 ZK watches leaks during snapshots.

Reason: Bug
Author: Lars Hofhansl
Ref: CDH-31088
---
 .../procedure/ZKProcedureCoordinatorRpcs.java      |    5 ++++-
 .../hbase/procedure/ZKProcedureMemberRpcs.java     |    5 ++++-
 .../hadoop/hbase/procedure/ZKProcedureUtil.java    |    5 +++++
 3 files changed, 13 insertions(+), 2 deletions(-)

diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
index 8a0cff0..a7b6fe9 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureCoordinatorRpcs.java
@@ -232,7 +232,10 @@ public class ZKProcedureCoordinatorRpcs implements ProcedureCoordinatorRpcs {
     ForeignException ee = null;
     try {
       byte[] data = ZKUtil.getData(zkProc.getWatcher(), abortNode);
-      if (!ProtobufUtil.isPBMagicPrefix(data)) {
+      if (data == null || data.length == 0) {
+        // ignore
+        return;
+      } else if (!ProtobufUtil.isPBMagicPrefix(data)) {
         LOG.warn("Got an error notification for op:" + abortNode
             + " but we can't read the information. Killing the procedure.");
         // we got a remote exception, but we can't describe it
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java
index fb040e1..8f312aa 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureMemberRpcs.java
@@ -309,7 +309,10 @@ public class ZKProcedureMemberRpcs implements ProcedureMemberRpcs {
       // figure out the data we need to pass
       ForeignException ee;
       try {
-        if (!ProtobufUtil.isPBMagicPrefix(data)) {
+        if (data == null || data.length == 0) {
+          // ignore
+          return;
+        } else if (!ProtobufUtil.isPBMagicPrefix(data)) {
           String msg = "Illegally formatted data in abort node for proc " + opName
               + ".  Killing the procedure.";
           LOG.error(msg);
diff --git a/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureUtil.java b/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureUtil.java
index f3a483a..b60ba22 100644
--- a/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureUtil.java
+++ b/hbase-server/src/main/java/org/apache/hadoop/hbase/procedure/ZKProcedureUtil.java
@@ -283,6 +283,11 @@ public abstract class ZKProcedureUtil
     // TODO This is potentially racy since not atomic. update when we support zk that has multi
     LOG.info("Clearing all znodes for procedure " + procedureName + "including nodes "
         + acquiredZnode + " " + reachedZnode + " " + abortZnode);
+
+    // Make sure we trigger the watches on these nodes by creating them. (HBASE-13885)
+    ZKUtil.createAndFailSilent(watcher, getAcquiredBarrierNode(procedureName));
+    ZKUtil.createAndFailSilent(watcher, getAbortZNode(procedureName));
+
     ZKUtil.deleteNodeRecursively(watcher, getAcquiredBarrierNode(procedureName));
     ZKUtil.deleteNodeRecursively(watcher, getReachedBarrierNode(procedureName));
     ZKUtil.deleteNodeRecursively(watcher, getAbortZNode(procedureName));
-- 
1.7.9.5

