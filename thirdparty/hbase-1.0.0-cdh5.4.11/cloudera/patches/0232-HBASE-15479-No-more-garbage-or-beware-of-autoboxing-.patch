From 0aeb1cfdd3947cc73568006a88c8ef7942203dfe Mon Sep 17 00:00:00 2001
From: tedyu <yuzhihong@gmail.com>
Date: Sat, 19 Mar 2016 21:15:07 -0700
Subject: [PATCH 232/245] HBASE-15479 No more garbage or beware of autoboxing
 (Vladimir Rodionov)

Change-Id: Ib23907e5e31fdb8adde5743134db0bf386f2c251
Reason: Improvement
Author: Vladimir Rodionov
Ref: CDH-39240
---
 .../apache/hadoop/hbase/client/AsyncProcess.java   |   16 ++++++++--------
 1 file changed, 8 insertions(+), 8 deletions(-)

diff --git a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
index c72fb0f..10ef929 100644
--- a/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
+++ b/hbase-client/src/main/java/org/apache/hadoop/hbase/client/AsyncProcess.java
@@ -355,7 +355,7 @@ class AsyncProcess {
 
       // Remember the previous decisions about regions or region servers we put in the
       //  final multi.
-      Map<Long, Boolean> regionIncluded = new HashMap<Long, Boolean>();
+      Map<HRegionInfo, Boolean> regionIncluded = new HashMap<HRegionInfo, Boolean>();
       Map<ServerName, Boolean> serverIncluded = new HashMap<ServerName, Boolean>();
 
       int posInList = -1;
@@ -455,10 +455,10 @@ class AsyncProcess {
    * @return true if this region is considered as busy.
    */
   protected boolean canTakeOperation(HRegionLocation loc,
-                                     Map<Long, Boolean> regionsIncluded,
+                                     Map<HRegionInfo, Boolean> regionsIncluded,
                                      Map<ServerName, Boolean> serversIncluded) {
-    long regionId = loc.getRegionInfo().getRegionId();
-    Boolean regionPrevious = regionsIncluded.get(regionId);
+    HRegionInfo regionInfo = loc.getRegionInfo();
+    Boolean regionPrevious = regionsIncluded.get(regionInfo);
 
     if (regionPrevious != null) {
       // We already know what to do with this region.
@@ -468,14 +468,14 @@ class AsyncProcess {
     Boolean serverPrevious = serversIncluded.get(loc.getServerName());
     if (Boolean.FALSE.equals(serverPrevious)) {
       // It's a new region, on a region server that we have already excluded.
-      regionsIncluded.put(regionId, Boolean.FALSE);
+      regionsIncluded.put(regionInfo, Boolean.FALSE);
       return false;
     }
 
     AtomicInteger regionCnt = taskCounterPerRegion.get(loc.getRegionInfo().getRegionName());
     if (regionCnt != null && regionCnt.get() >= maxConcurrentTasksPerRegion) {
       // Too many tasks on this region already.
-      regionsIncluded.put(regionId, Boolean.FALSE);
+      regionsIncluded.put(regionInfo, Boolean.FALSE);
       return false;
     }
 
@@ -498,7 +498,7 @@ class AsyncProcess {
       }
 
       if (!ok) {
-        regionsIncluded.put(regionId, Boolean.FALSE);
+        regionsIncluded.put(regionInfo, Boolean.FALSE);
         serversIncluded.put(loc.getServerName(), Boolean.FALSE);
         return false;
       }
@@ -508,7 +508,7 @@ class AsyncProcess {
       assert serverPrevious.equals(Boolean.TRUE);
     }
 
-    regionsIncluded.put(regionId, Boolean.TRUE);
+    regionsIncluded.put(regionInfo, Boolean.TRUE);
 
     return true;
   }
-- 
1.7.9.5

